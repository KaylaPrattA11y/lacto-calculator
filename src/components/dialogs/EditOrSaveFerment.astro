---
import Dialog from "../Dialog.astro";

export interface Props {
  action: string;
  brine: string;
  weight: string;
  salt: string;
  dateStart: string;
  dateEnd: string;
  fermentName: string;
  notes: string;
  color: string;
}

const { 
  action,
  brine, 
  weight, 
  salt, 
  dateStart,
  dateEnd, 
  fermentName, 
  notes, 
  color  
} = Astro.props;
---

<Dialog 
  id={action === "save" ? "saveFermentDialog" : "editFermentDialog"} 
  heading={action === "save" ? "Save this ferment" : "Edit this ferment"}>
  <form 
    id={action === "save" ? "saveFermentForm" : "editFermentForm"}
    method="dialog">
    <ul class="input-group ferment-details">
      <li>
        <label for={brine}>Brine: </label>
        <output id={brine} name={brine} data-label="brine"></output>
        <span class="ferment-unit">%</span>
      </li>
      <li>
        <label for={weight}>Weight: </label>
        <output id={weight} name={weight} data-label="weight"></output>
        <span data-label="unit" class="ferment-unit"></span>
      </li>
      <li>
        <label for={salt}>Salt: </label>
        <output id={salt} name={salt} data-label="salt"></output>
        <span data-label="unit" class="ferment-unit"></span>
      </li>
    </ul>
    <div class="input-group">
      <label for={fermentName}>Name</label>
      <input 
      type="text" 
      id={fermentName} 
      maxlength="30" 
      name={fermentName} 
      required />
    </div>
    <div class="input-group">
      <label for={dateStart}>Start date</label>
      <input type="date" id={dateStart} name={dateStart} required />
      <p data-validate="field">Start date must be earlier than the End date.</p>
    </div>
    <div class="input-group">
      <label for={dateEnd}>End date (optional)</label>
      <input type="date" id={dateEnd} name={dateEnd} />
      <p data-validate="field">End date must be later than the Start date.</p>
    </div>
    <div class="input-group">
      <label for={notes}>Notes (optional)</label>
      <textarea id={notes} name={notes} maxlength="300"></textarea>
    </div>
    <fieldset class="input-group">
      <legend>Tag with a color (optional)</legend>
      <label class="theme-transparent">
        <span class="visually-hidden">transparent</span>
        <input type="radio" name={color} value="transparent" checked />
      </label>
      <label class="theme-red">
        <span class="visually-hidden">red</span>
        <input type="radio" name={color} value="red" />
      </label>
      <label class="theme-orange">
        <span class="visually-hidden">orange</span>
        <input type="radio" name={color} value="orange" />
      </label>
      <label class="theme-yellow">
        <span class="visually-hidden">yellow</span>
        <input type="radio" name={color} value="yellow" />
      </label>
      <label class="theme-green">
        <span class="visually-hidden">green</span>
        <input type="radio" name={color} value="green" />
      </label>
      <label class="theme-blue">
        <span class="visually-hidden">blue</span>
        <input type="radio" name={color} value="blue" />
      </label>
      <label class="theme-indigo">
        <span class="visually-hidden">indigo</span>
        <input type="radio" name={color} value="indigo" />
      </label>
      <label class="theme-violet">
        <span class="visually-hidden">violet</span>
        <input type="radio" name={color} value="violet" />
      </label>
    </fieldset>
    <div class="input-group actions">
      <button 
        type="submit" 
        class="btn-primary"
        disabled={action === "edit"}
        >Save</button>
      <button 
        type="button" 
        aria-controls={action === "save" ? "saveFermentDialog" : "editFermentDialog"} 
        aria-haspopup="dialog" 
        class="btn-default">
        Cancel
      </button>
    </div>
  </form>
</Dialog>

<style>
  output {
    font-size: var(--font-size-lg);
    font-weight: 700;
  }
  :where(input, textarea) {
    background: none;
    border: 0;
    margin: 0;
    padding: 0;
    border-bottom: 1px solid var(--border-color);
    inline-size: 100%;
    color: var(--text-color);
    font-size: var(--font-size-lg);
  }
  :where(input, textarea):focus {
    outline: 0;
    background-color: rgba(255, 255, 255, 0.05);
  }
  label {
    font-size: var(--font-size-md);
    display: block;
  }
  input::placeholder {
    color: var(--text-color);
    opacity: 0.5;
  }
  .input-group:not(:first-child) {
    margin-top: 1em;
    position: relative;
  }
  .actions {
    display: flex;
    flex-direction: row-reverse;
    justify-content: flex-start;
    gap: 1rem;
  }
  fieldset {
    margin: 0;
    padding: 0;
    border: 0;
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    gap: 1rem;
  }
  fieldset > label {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 1.5rem;
    height: 1.5rem;
    border-radius: 1.5rem;
  }
  fieldset > label:focus-within {
    outline: 2px solid var(--text-color);
  }
  legend {
    margin-block-end: 1rem;;
  }
  input[type="radio"] {
    margin: 0;
    padding: 0;
    width: 0.5rem;
    height: 0.5rem;
  }
  input[type="radio"]:checked {
    scale: 4.5;
  }
  .theme-red {
    background: red;
  }
  [value="transparent"] {
    accent-color: var(--border-color);
  }
  .theme-transparent {
    border: 2px solid var(--border-color);
  }
  [value="red"] {
    accent-color: red;
  }
  .theme-orange {
    background: orange;
  }
  [value="orange"] {
    accent-color: orange;
  }
  .theme-yellow {
    background: yellow;
  }
  [value="yellow"] {
    accent-color: yellow;
  }
  .theme-green {
    background: green;
  }
  [value="green"] {
    accent-color: green;
  }
  .theme-blue {
    background: blue;
  }
  [value="blue"] {
    accent-color: blue;
  }
  .theme-indigo {
    background: indigo;
  }
  [value="indigo"] {
    accent-color: indigo;
  }
  .theme-violet {
    background: violet;
  }
  [value="violet"] {
    accent-color: violet;
  }
</style>